version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: hrc-kitchen-db
    environment:
      POSTGRES_USER: hrc_kitchen
      POSTGRES_PASSWORD: hrc_kitchen_password
      POSTGRES_DB: hrc_kitchen
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrc_kitchen"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hrc-kitchen-backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://hrc_kitchen:hrc_kitchen_password@postgres:5432/hrc_kitchen?schema=public
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      CORS_ORIGIN: http://localhost:5173
      FRONTEND_URL: http://localhost:5173
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hrc-kitchen-frontend
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
      VITE_STRIPE_PUBLISHABLE_KEY: ${VITE_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
